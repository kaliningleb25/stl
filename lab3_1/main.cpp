#include <iostream>

#include <iostream>
#include <vector>
#include <list>

#include "QueueWithPriority.h"

/* Калинин Глеб (23531/21-1)
 *
 *
 * Ниже приведен интерфейс класса очереди с приоритетами, который функционирует следующим образом.

В очередь могут быть добавлены элементы, каждому элементу при добавлении присваивается один из трех уровней приоритета (low, normal, high)

Элементы из очереди извлекаются в соответствии с их приоритетами (сначала извлекаются элементы с приоритетом high, потом normal, потом low),
элементы с одинаковыми приоритетами извлекаются из очереди в порядки их поступления.

В очереди также может происходить операция акселерации – все элементы с приоритетом low находящиеся в момент акселерации в очереди
увеличивают свой приоритет до high и «обгоняют» элементы с приоритетом normal.
 */


using namespace std;

int main() {
    QueueWithPriority queue;

    vector<prioritizedElement> elements = {
            {"1", HIGH},
            {"2", NORMAL},
            {"3", LOW},
            {"4", HIGH},
            {"5", NORMAL},
            {"6", LOW},
            {"7", LOW},
            {"8", LOW},
            {"9", NORMAL}
    };

    for (auto element : elements) {
        queue.putElementToQueue(element.element, element.priority);
    }

    // Вывод списка
    queue.prnt();
    // Акселерация - все элементы с приоритетом low находящиеся в момент акселерации в очереди
    // увеличивают свой приоритет до high и «обгоняют» элементы с приоритетом normal
    queue.accelerate();
    // Вывод списка
    queue.prnt();

}
